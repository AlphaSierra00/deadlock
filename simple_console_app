package deadlockpaket;
import java.awt.*;
import java.util.Scanner;

public class Main{

private int processes, resources, max[][], allocate[][],need[][], available[];
int safeSequence[] = new int[processes];

public static void main(String[] args) {

    System.out.println("******* Program baslatildi *******");
    Main dd = new Main();
    dd.input();
    dd.cal();
}

public void input(){
    Scanner sc=new Scanner(System.in);
    System.out.print("processes sayisi: ");
    processes=sc.nextInt();  
    System.out.print("resource sayisi: ");
    resources=sc.nextInt();  

    need=new int[processes][resources];  
    max=new int[processes][resources];
    allocate=new int[processes][resources];
    available=new int[resources];

    System.out.println("allocation matrisi girin: (0 0 0 gibi satir satir girin)");
 for(int i=0;i<processes;i++)
      for(int j=0;j<resources;j++)
     allocate[i][j]=sc.nextInt();  

 System.out.println("max matrisi girin (0 0 0 gibi satir satir girin)");
 for(int i=0;i<processes;i++)
      for(int j=0;j<resources;j++)
     max[i][j]=sc.nextInt();  

    System.out.println("available matrisi girin (0 0 0 gibi satir satir girin)");
    for(int j=0;j<resources;j++)
     available[j]=sc.nextInt(); 

    sc.close();          
}


public void cal(){
    int finish[],temp,flag=1, k,c1=0;

    int dead[];
    int safe[];
    int i,j;
    
    finish=new int[100];
    dead=new int[100];
    safe=new int[100];
    int theArray[] = {0,2,3,4,1};
    for(i=0;i<processes;i++)
           {
                          finish[i]=0;
           }
   
    for(i=0;i<processes;i++)
           {
                          for(j=0;j<resources;j++)
                          {
                                         need[i][j]=max[i][j]-allocate[i][j];
                          }
           }
    while(flag==1)
           {
                          flag=0;
                          for(i=0;i<processes;i++)
                          {
                                         int c=0;
                                         for(j=0;j<resources;j++)
                                         {
                                                        if((finish[i]==0)&&(need[i][j]<=available[j]))
                                                        {
                                                                       c++;
                                                                       if(c==resources)
                                                                       {
                                                                                      for(k=0;k<resources;k++)
                                                                                      {
                                                                                                     available[k]+=allocate[i][j];
                                                                                                     finish[i]=1;
                                                                                                     flag=1;
                                                                                      }
                                                                                       if(finish[i]==1)
                                                                                      {
                                                                                                     i=processes;
                                                                                        }
                                                              }
                                                  }
                                      }
                         }
            }
            j=0;
            flag=0;
            for(i=0;i<processes;i++)
            {
                          if(finish[i]==0)
                          {
                                         dead[j]=i;
                                         j++;
                                         flag=1;
                          }
           }
             if(flag==1)
             {

                          System.out.println("\n\nKilitlenme oldu\n");

           }
             else
             {
     	        System.out.println("\n\nKilitlenme yoktur\n");
     	                for (int i1 = 0;i1 < processes; i1++){
     	            System.out.print("P" + theArray[i1] + " ");

     	        }
     	    }
}
}
